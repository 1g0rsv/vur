{"ast":null,"code":"export default {\n  data() {\n    return {\n      userText: '',\n      link: '' // Ссылка, которая будет отображаться после сохранения текста\n    };\n  },\n  methods: {\n    async saveText() {\n      try {\n        const response = await fetch('http://localhost:8080/save', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            text: this.userText\n          })\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json(); // Предполагается, что сервер возвращает JSON объект с полем uuid\n        this.link = `http://localhost:8080/text/${data.uuid}`; // Формирование ссылки\n\n        console.log('Success:', data);\n        alert('Text saved successfully');\n      } catch (error) {\n        console.error('Error:', error);\n        alert('Failed to save text');\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","userText","link","methods","saveText","response","fetch","method","headers","body","JSON","stringify","text","ok","Error","status","json","uuid","console","log","alert","error"],"sources":["/Users/igorskibitckiy/Desktop/vur/my-vue-app/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <input v-model=\"userText\" placeholder=\"Введите текст\">\n    <button @click=\"saveText\">Save</button>\n    <!-- Элемент для отображения ссылки -->\n    <div v-if=\"link\">\n      Поделитесь этой ссылкой: <a :href=\"link\" target=\"_blank\">{{ link }}</a>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      userText: '',\n      link: '' // Ссылка, которая будет отображаться после сохранения текста\n    };\n  },\n  methods: {\n    async saveText() {\n      try {\n        const response = await fetch('http://localhost:8080/save', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ text: this.userText }),\n        });\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const data = await response.json(); // Предполагается, что сервер возвращает JSON объект с полем uuid\n        this.link = `http://localhost:8080/text/${data.uuid}`; // Формирование ссылки\n\n        console.log('Success:', data);\n        alert('Text saved successfully');\n      } catch (error) {\n        console.error('Error:', error);\n        alert('Failed to save text');\n      }\n    }\n  }\n}\n</script>\n\n<style>\n/* Ваши стили */\n</style>\n"],"mappings":"AAYA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE,EAAC,CAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,QAAQA,CAAA,EAAG;MACf,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,4BAA4B,EAAE;UACzDC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEC,IAAI,EAAE,IAAI,CAACX;UAAS,CAAC;QAC9C,CAAC,CAAC;QAEF,IAAI,CAACI,QAAQ,CAACQ,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBT,QAAQ,CAACU,MAAO,EAAC,CAAC;QAC3D;QAEA,MAAMf,IAAG,GAAI,MAAMK,QAAQ,CAACW,IAAI,CAAC,CAAC,EAAE;QACpC,IAAI,CAACd,IAAG,GAAK,8BAA6BF,IAAI,CAACiB,IAAK,EAAC,EAAE;;QAEvDC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEnB,IAAI,CAAC;QAC7BoB,KAAK,CAAC,yBAAyB,CAAC;MAClC,EAAE,OAAOC,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAC9BD,KAAK,CAAC,qBAAqB,CAAC;MAC9B;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}